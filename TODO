
/*  $Header$
 *
 *  Copyright (c) 1987-2003 Sun Microsystems, Inc.
 *  All Rights Reserved.
 */

Gcalctool TODO.
===============

* Problems with keyboard accelerators:
  - Navigation with the arrow keys is a little haywire.
  - Control-q should terminate gcalctool. It's not being recignised.
  - Control-C and Control-V should Copy/Paste the display value from/to the
    clipboard. They are not being recognised.

* val_to_button() needs to be reworked to find Alt-<n> type buttons.

* If gcalctool is initially displayed in Financial or Scientific mode, the
  Basic Mode radio item is set in the View menu.

* Check that the numeric keypad does all the right things.

* Add in an overview of the various changes since v4.1.13 to the NEWS file.

* The "*displayitem*" widget and the "*register_label<n>*" widgets background
  color aren't being set to white.

* Need to create help files for gcalctool.

* Need to reduce tool tip help message sizes.

* Make sure all the keyboard equivalents of each widget are working.

* Make sure that this new gcalctool is fully accessible.

* Improve the colors in the gcalctoolrc file.

* Track down and fixup any memory leaks.

* From Calum Benson <calum.benson@sun.com>
  For the Rcl, Sto and Exch menu items, consider losing the "Register" word
  in every menu item and instead set the register number to bold.

  [richb - 21st January 2003. I tried this. It doesn't look like the menu
   items respect the Pango markup language. Need to check further].

* Move .gcalctoolcf functionality into gconf resources.

* Implement bugtraq rfe #1190372/#1105626.
  It appears that function definitions are unable to handle all calculator
  buttons. Buttons with a keyboard equivalent that is a special key (clear 
  display) or key combination (^s - Sin) appear to be rejected in functions 
  defs.  This affects the availability of many of the calculator buttons.

* Implement bugtraq rfe #4023507.
  The calculator in Scientific mode accepts hex entries of up to
  eight digits.  This was sufficient to deal with 32-bit addresses.
  When Solaris is 64-bit, the calculator will be less useful.
  Maybe there should be a Logical-64 mode.

* Fix bugtraq bug #4065378.
  Certain functions entered into gcalctool produce incorrect results.
  I entered the following functions into gcalctool:

  ((R0)-32)*(5/9)=S1

  (5/9)*(R0-32)=S0

  ((R0-32)*5)/9=S0

  The above 3 functions all do pretty much the same thing. They convert 
  Fahrenheit to Celsius. However when I store "212" in Register 0, and 
  run the first of the three functions above, the result is 21200 (and 
  we all know that 212F is 100 C). If I run the same conversion again, 
  the result is 2120000. It seems like the previous result is always 
  multiplied by 100. The other 2 functions also return incorrect results.

  Not all user defined functions behave this way. For example the Function 
  for converting Celsius to Fahrenheit worked as expected.

* Implement bugtraq rfe #4113441.
  Scientists using dtcalc under CDE would like to get deeper precision.
  The maximum accuracy depth, which is 9, is not enough for them.
  They would like to have 15 digits available.

* Implement bugtraq rfe #1122089.
  Add a log base 2 key.

* Consider the possibility of being able to have all the mode windows
  displayed at the same time.

* As of v3.0.1. calctool was modified to have "infinite" precision
  internally. This needs to be made available to the "power" users, but
  shouldn't confuse the novice. What I suggest is to replace the Acc
  button menu, with an Acc... button which brings up a popup with a slider
  on, to allow you to set the number of numeric places. By default this
  will be 0-9. I also propose adding another X resource, which will also
  allow you to set the number of numeric places. This value can be as
  large as you want. When calctool starts up, it will look for that
  resource, and adjust the sliders maximum value appropriately.
 
  Making this addition will possibly cause the calctool numeric result to
  be larger that can fully displayed. There are two possible ways to fix
  this:

  * make the display area a scrollable canvas.
  * make the calctool numeric display a panel text item of the appropriate
    length.

* Consider adding in the ability to drag & drop from/to the display and 
  the memory registers.
 
* Consider adding in some more functions:
 
  ~ Common antilogarithm and natural antilogarithm.
  ~ Cube root key.
  ~ Root key. The y root of x.
  ~ Rectangular to polar and polar to rectangular keys.
   
* Consider adding Reverse Polish notation functionality (as an option).


MP - todo.
----------

* Shouldn't have to convert back to a double in make_number() in order
  to test if the number is too large to be displayed in fixed point.

* The cmax field for make_fixed should be dynamic, and depend upon how
  many characters can be displayed (ie. a larger calctool will be able
  to display more).

* Tidy up the code in mp.c, to eventually use no labels and goto's.

* Adjust all uses of MP...[MP_SIZE] to use a dynamic size so that it's
  possible to calculate to numbers of any length.
